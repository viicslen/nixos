name: Build ISO Images

on:
  workflow_dispatch:
    inputs:
      build_target:
        description: 'Which ISO to build'
        required: true
        default: 'both'
        type: choice
        options:
          - 'both'
          - 'steam-handheld'
          - 'common'

jobs:
  build-iso:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Steam Handheld ISO"
            package: "iso.steam-handheld"
            condition: ${{ github.event.inputs.build_target == 'both' || github.event.inputs.build_target == 'steam-handheld' }}
          - name: "Common ISO"
            package: "iso.common"
            condition: ${{ github.event.inputs.build_target == 'both' || github.event.inputs.build_target == 'common' }}

    name: Build ${{ matrix.name }}
    if: ${{ matrix.condition }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Setup Cachix
        uses: cachix/cachix-action@v15
        with:
          name: nix-community
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN || '' }}

      - name: Free up disk space
        run: |
          # Remove unnecessary packages to free up space
          sudo apt-get purge -y \
            '^dotnet-.*' \
            '^llvm-.*' \
            'php.*' \
            '^mongodb-.*' \
            '^mysql-.*' \
            azure-cli \
            google-cloud-* \
            hhvm \
            google-chrome-stable \
            firefox \
            powershell \
            mono-devel \
            libgl1-mesa-dri
          sudo apt-get autoremove -y
          sudo apt-get clean
          
          # Remove large directories
          sudo rm -rf \
            /usr/share/dotnet \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL \
            /usr/local/share/boost \
            /usr/lib/jvm
          
          df -h

      - name: Build ${{ matrix.name }}
        run: |
          echo "Building ISO: ${{ matrix.package }}"
          nix build .#${{ matrix.package }} \
            --option cores 0 \
            --option max-jobs auto \
            --option keep-going true \
            --print-build-logs

      - name: Get ISO info
        id: iso_info
        run: |
          ISO_PATH=$(readlink -f result)
          ISO_NAME=$(basename "$ISO_PATH")
          ISO_SIZE=$(du -h "$ISO_PATH" | cut -f1)
          echo "path=$ISO_PATH" >> $GITHUB_OUTPUT
          echo "name=$ISO_NAME" >> $GITHUB_OUTPUT
          echo "size=$ISO_SIZE" >> $GITHUB_OUTPUT

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-iso
          path: ${{ steps.iso_info.outputs.path }}
          retention-days: 7
          compression-level: 0  # ISOs are already compressed

      - name: Create release notes
        run: |
          echo "## ${{ matrix.name }}" >> release_notes.md
          echo "- **File**: ${{ steps.iso_info.outputs.name }}" >> release_notes.md
          echo "- **Size**: ${{ steps.iso_info.outputs.size }}" >> release_notes.md
          echo "- **Built from**: ${{ github.sha }}" >> release_notes.md
          echo "- **Build time**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> release_notes.md
          echo "" >> release_notes.md

      - name: Upload release notes
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-release-notes
          path: release_notes.md

  summary:
    needs: build-iso
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Download all release notes
        uses: actions/download-artifact@v4
        with:
          pattern: "*-release-notes"
          merge-multiple: true

      - name: Combine release notes
        run: |
          echo "# ISO Build Summary" > combined_notes.md
          echo "" >> combined_notes.md
          echo "**Workflow**: ${{ github.workflow }}" >> combined_notes.md
          echo "**Trigger**: Manual dispatch" >> combined_notes.md
          echo "**Repository**: ${{ github.repository }}" >> combined_notes.md
          echo "**Commit**: ${{ github.sha }}" >> combined_notes.md
          echo "**Build Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> combined_notes.md
          echo "" >> combined_notes.md
          
          if ls release_notes.md 2>/dev/null; then
            cat release_notes.md >> combined_notes.md
          fi

      - name: Upload combined summary
        uses: actions/upload-artifact@v4
        with:
          name: build-summary
          path: combined_notes.md

      - name: Build Status Summary
        run: |
          echo "## Build Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.build-iso.result }}" == "success" ]; then
            echo "✅ ISO build completed successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ ISO build failed or was cancelled" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the artifacts section for downloadable ISO files." >> $GITHUB_STEP_SUMMARY